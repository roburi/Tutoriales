{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sistemas\\\\Desktop\\\\react\\\\Tutoriales\\\\criptomonedas\\\\src\\\\components\\\\Formulario.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport MensajeError from './Error';\nimport useMoneda from '../hooks/useMoneda';\nimport useCriptomoneda from '../hooks/useCriptomoneda';\nimport axios from 'axios';\nconst Boton = styled.button`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px;\n    padding: 10px;\n    background-color: #66a2fe;\n    border: none;\n    width: 100%;\n    border-radius: 10px;\n    color: #fff;\n\n    transition: background-color .3s ease;\n\n    &:hover{\n        background-color: #326AC0;\n        cursor: pointer;\n    }\n`;\n\nconst Formulario = () => {\n  //State del listado de criptomonedas\n  const [listacripto, guardarCriptomonedas] = useState([]);\n  const [error, guardarError] = useState(false); //Monedas\n\n  const MONEDAS = [{\n    codigo: 'USD',\n    nombre: 'Dolar Estadounidense'\n  }, {\n    codigo: 'MXN',\n    nombre: 'Peso mexicano'\n  }, {\n    codigo: 'EUR',\n    nombre: 'Euro'\n  }, {\n    codigo: 'GBP',\n    nombre: 'Libra Esterlina'\n  }]; //utilizar useMoneda\n\n  const [moneda, SelectMonedas] = useMoneda('Elige tu moneda', '', MONEDAS); //Utilizando useCriptomoneda\n\n  const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu Criptomoneda', '', listacripto); // Ejecutar llamado a la api\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const urlAPI = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\n      const resultado = await axios.get(urlAPI);\n      guardarCriptomonedas(resultado.data.Data);\n    };\n\n    consultarAPI();\n  }, []);\n\n  const cotizarMoneda = e => {\n    e.preventDefault();\n\n    if (moneda === '' || criptomoneda === '') {\n      guardarError(true);\n      return;\n    } //Pasar los datos al componente principal\n\n\n    guardarError(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: cotizarMoneda,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, error ? \"Hay un error\" : null, /*#__PURE__*/React.createElement(SelectMonedas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SelectCripto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Boton, {\n    type: \"submit\",\n    value: \"Obtener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Obtener\"));\n};\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/sistemas/Desktop/react/Tutoriales/criptomonedas/src/components/Formulario.jsx"],"names":["React","useEffect","useState","styled","MensajeError","useMoneda","useCriptomoneda","axios","Boton","button","Formulario","listacripto","guardarCriptomonedas","error","guardarError","MONEDAS","codigo","nombre","moneda","SelectMonedas","criptomoneda","SelectCripto","consultarAPI","urlAPI","resultado","get","data","Data","cotizarMoneda","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAGL,MAAM,CAACM,MAAO;;;;;;;;;;;;;;;;;;CAA5B;;AAoBA,MAAMC,UAAU,GAAG,MAAM;AACrB;AACA,QAAK,CAACC,WAAD,EAAcC,oBAAd,IAAsCV,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAK,CAACW,KAAD,EAAQC,YAAR,IAAwBZ,QAAQ,CAAC,KAAD,CAArC,CAHqB,CAKrB;;AACA,QAAMa,OAAO,GAAG,CACZ;AAAEC,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GADY,EAEZ;AAACD,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAFY,EAGZ;AAACD,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAHY,EAIZ;AAACD,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAJY,CAAhB,CANqB,CAarB;;AACA,QAAK,CAACC,MAAD,EAASC,aAAT,IAA0Bd,SAAS,CAAC,iBAAD,EAAoB,EAApB,EAAwBU,OAAxB,CAAxC,CAdqB,CAerB;;AACA,QAAK,CAACK,YAAD,EAAeC,YAAf,IAA+Bf,eAAe,CAAC,uBAAD,EAA0B,EAA1B,EAA8BK,WAA9B,CAAnD,CAhBqB,CAiBrB;;AACAV,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMqB,YAAY,GAAG,YAAY;AAC7B,YAAMC,MAAM,GAAG,yEAAf;AAEA,YAAMC,SAAS,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAUF,MAAV,CAAxB;AAEAX,MAAAA,oBAAoB,CAACY,SAAS,CAACE,IAAV,CAAeC,IAAhB,CAApB;AACH,KAND;;AAUAL,IAAAA,YAAY;AAEf,GAbQ,EAaN,EAbM,CAAT;;AAgBA,QAAMM,aAAa,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGZ,MAAM,KAAK,EAAX,IAAiBE,YAAY,KAAK,EAArC,EAAwC;AACpCN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH,KANsB,CAQvB;;;AACAA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAXD;;AAaA,sBACI;AAAM,IAAA,QAAQ,EAAEc,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKf,KAAK,GAAG,cAAH,GAAoB,IAF9B,eAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;AAaH,CA5DD;;AA8DA,eAAeH,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport MensajeError from './Error';\r\nimport useMoneda from '../hooks/useMoneda';\r\nimport useCriptomoneda from '../hooks/useCriptomoneda';\r\nimport axios from 'axios';\r\n\r\nconst Boton = styled.button`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover{\r\n        background-color: #326AC0;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Formulario = () => {\r\n    //State del listado de criptomonedas\r\n    const[listacripto, guardarCriptomonedas] = useState([]);\r\n    const[error, guardarError] = useState(false);\r\n\r\n    //Monedas\r\n    const MONEDAS = [\r\n        { codigo: 'USD', nombre: 'Dolar Estadounidense' },\r\n        {codigo: 'MXN', nombre: 'Peso mexicano'},\r\n        {codigo: 'EUR', nombre: 'Euro'},\r\n        {codigo: 'GBP', nombre: 'Libra Esterlina'}\r\n    ]\r\n\r\n    //utilizar useMoneda\r\n    const[moneda, SelectMonedas] = useMoneda('Elige tu moneda', '', MONEDAS);\r\n    //Utilizando useCriptomoneda\r\n    const[criptomoneda, SelectCripto] = useCriptomoneda('Elige tu Criptomoneda', '', listacripto);\r\n    // Ejecutar llamado a la api\r\n    useEffect(() =>{\r\n        const consultarAPI = async () => {\r\n            const urlAPI = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n\r\n            const resultado = await axios.get(urlAPI);\r\n        \r\n            guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n\r\n\r\n\r\n        consultarAPI();\r\n\r\n    }, []);\r\n\r\n\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        if(moneda === '' || criptomoneda === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //Pasar los datos al componente principal\r\n        guardarError(false);        \r\n\r\n    };\r\n\r\n    return ( \r\n        <form onSubmit={cotizarMoneda}>\r\n\r\n            {error ? \"Hay un error\" : null}\r\n\r\n            <SelectMonedas />\r\n            <SelectCripto />\r\n            <Boton\r\n                type=\"submit\"\r\n                value=\"Obtener\">Obtener</Boton>\r\n\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}