{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sistemas\\\\Desktop\\\\react\\\\Tutoriales\\\\criptomonedas\\\\src\\\\hooks\\\\useMoneda.js\";\nimport React, { Fragment, useState } from 'react';\n\nconst useMoneda = (label, stateInicial, opciones) => {\n  //State de este custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => {\n    /*#__PURE__*/\n    React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, label), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, opciones.map(opcion => {\n      /*#__PURE__*/\n      React.createElement(\"opcion\", {\n        key: opcion.codigo,\n        value: opcion.nombre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      });\n    })));\n  }; //retornar state, interfaz y funcion que modifica el state\n\n\n  return [state, Seleccionar, actualizarState];\n};\n\nexport default useMoneda;","map":{"version":3,"sources":["C:/Users/sistemas/Desktop/react/Tutoriales/criptomonedas/src/hooks/useMoneda.js"],"names":["React","Fragment","useState","useMoneda","label","stateInicial","opciones","state","actualizarState","Seleccionar","map","opcion","codigo","nombre"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,QAAtB,KAAmC;AAEjD;AACA,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BN,QAAQ,CAACG,YAAD,CAAzC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtB;AAAA,wBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQL,KAAR,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,QAAQ,CAACI,GAAT,CAAaC,MAAM,IAAI;AACpB;AAAA;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACC,MAApB;AAA4B,QAAA,KAAK,EAAED,MAAM,CAACE,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFA,CADL,CAFJ;AAQH,GATD,CALiD,CAgBjD;;;AACA,SAAO,CAACN,KAAD,EAAQE,WAAR,EAAqBD,eAArB,CAAP;AACH,CAlBD;;AAoBA,eAAeL,SAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    //State de este custom hook\r\n    const [state, actualizarState] = useState(stateInicial);\r\n\r\n    const Seleccionar = () => {\r\n        <Fragment>\r\n            <label>{label}</label>\r\n            <select>\r\n                {opciones.map(opcion => {\r\n                    <opcion key={opcion.codigo} value={opcion.nombre}></opcion>\r\n                })}\r\n            </select>\r\n        </Fragment>\r\n    };\r\n\r\n    //retornar state, interfaz y funcion que modifica el state\r\n    return [state, Seleccionar, actualizarState];\r\n}\r\n\r\nexport default useMoneda;\r\n\r\n"]},"metadata":{},"sourceType":"module"}