{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sistemas\\\\Desktop\\\\react\\\\Tutoriales\\\\criptomonedas\\\\src\\\\hooks\\\\useMoneda.js\";\nimport React, { Fragment, useState } from 'react';\n\nconst useMoneda = (label, stateInicial, opciones) => {\n  //State de este custom hook\n  const [state, actualizarState] = useState(stateInicial);\n\n  const Seleccionar = () => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, label), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \" -- Seleccione -- \"), opciones.map(opcion => /*#__PURE__*/React.createElement(\"option\", {\n    key: opcion.codigo,\n    value: opcion.codigo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \" \", opcion.nombre, \" \")))); //retornar state, interfaz y funcion que modifica el state\n\n\n  return [state, Seleccionar, actualizarState];\n};\n\nexport default useMoneda;","map":{"version":3,"sources":["C:/Users/sistemas/Desktop/react/Tutoriales/criptomonedas/src/hooks/useMoneda.js"],"names":["React","Fragment","useState","useMoneda","label","stateInicial","opciones","state","actualizarState","Seleccionar","map","opcion","codigo","nombre"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;AAEA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,QAAtB,KAAmC;AAEjD;AACA,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2BN,QAAQ,CAACG,YAAD,CAAzC;;AAEA,QAAMI,WAAW,GAAG,mBAChB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,KAAR,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKE,QAAQ,CAACI,GAAT,CAAaC,MAAM,iBAChB;AAAQ,IAAA,GAAG,EAAEA,MAAM,CAACC,MAApB;AAA4B,IAAA,KAAK,EAAED,MAAM,CAACC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoDD,MAAM,CAACE,MAA3D,MADH,CAFL,CAFJ,CADJ,CALiD,CAiBjD;;;AACA,SAAO,CAACN,KAAD,EAAQE,WAAR,EAAqBD,eAArB,CAAP;AACH,CAnBD;;AAqBA,eAAeL,SAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    //State de este custom hook\r\n    const [state, actualizarState] = useState(stateInicial);\r\n\r\n    const Seleccionar = () => (\r\n        <Fragment>\r\n            <label>{label}</label>\r\n            <select>\r\n                <option value=\"\"> -- Seleccione -- </option>\r\n                {opciones.map(opcion => (\r\n                    <option key={opcion.codigo} value={opcion.codigo}> {opcion.nombre} </option>\r\n                ))}\r\n            </select>\r\n        </Fragment>\r\n    );\r\n\r\n    //retornar state, interfaz y funcion que modifica el state\r\n    return [state, Seleccionar, actualizarState];\r\n};\r\n\r\nexport default useMoneda;\r\n\r\n"]},"metadata":{},"sourceType":"module"}